# This is a Terragrunt module generated by boilerplate.
terraform {
  source = "git::https://github.com/asajaroff/tofu-aws-modules.git//modules/ec2?ref=feat/ec2-instance-module"
}

include "root" {
  path = find_in_parent_folders()
}

locals {
  environment_vars = read_terragrunt_config(find_in_parent_folders("env.hcl"))
  region_vars      = read_terragrunt_config(find_in_parent_folders("region.hcl"))
}

dependency "network" {
  config_path                             = "../network"
  # Configure mock outputs for the `validate` command that are returned when there are no outputs available (e.g the
  # module hasn't been applied yet.
  mock_outputs_allowed_terraform_commands = ["validate"]
  mock_outputs = {
    instance_name = "procsi.development.ar"
    vpc_id = "vpc-mocked"
    subnet_id = "subnet-mocked"
    region = "us-east-1"
  }
}

inputs = {
  # --------------------------------------------------------------------------------------------------------------------
  # Required input variables
  # --------------------------------------------------------------------------------------------------------------------
  instance_name = "procsi.development.ar"
  vpc_id = dependency.network.outputs.vpc_id
  subnet_id = dependency.network.outputs.public_subnets
  region = local.region_vars.locals.aws_region

  # --------------------------------------------------------------------------------------------------------------------
  # Optional input variables
  # Uncomment the ones you wish to set
  # --------------------------------------------------------------------------------------------------------------------

  # Description: If true, will associate a public ip address with the created instance
  # Type: bool
  associate_public_ip_address = true

  # Description: If true, enables AWS Session Manager for connecting to the instance
  # Type: string
  aws_ssm_enabled = true

  # Description:
  #   The instance type, defaults to 't3.micro'
  #   https://aws.amazon.com/ec2/instance-types/?nc1=h_ls
  #   
  # Type: string
  # instance_type = "t3.micro"

  # Description:
  #   Processor architecture, possible options:
  #   - amd64
  #   - arm64
  #   
  # Type: string
  os_arch = "amd64"

  # Description:
  #     The flavor for the EC2 instance to be deployed, possible options:
  #     - debian
  #     - ubuntu
  #     - freebsd
  #   
  # Type: string
  os_family = "debian"

  # Description: (variable tags did not define a description)
  # Type: map
  # tags = {}

  # Description: Region where the AWS provider will be configured and deployed
  # Type: string
  # region = "us-east-1"

  # Description: Create an SSH key for connecting to the EC2 instace
  # Type: bool
}
